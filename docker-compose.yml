version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: donerhub
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  fastapi:
    build: .
    command: bash -c "alembic upgrade head && uvicorn run:app --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  client_bot:
    image: python:3.11
    command: python bot/client_bot/main.py
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - fastapi
    healthcheck:
      test: ["CMD", "python", "-c", "print('ok')"]
      interval: 30s
      timeout: 10s
      retries: 3

  employee_bot:
    image: python:3.11
    command: python bot/employee_bot/main.py
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - fastapi
    healthcheck:
      test: ["CMD", "python", "-c", "print('ok')"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin_bot:
    image: python:3.11
    command: python bot/admin_bot/main.py
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - fastapi
    healthcheck:
      test: ["CMD", "python", "-c", "print('ok')"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
